{"version":3,"file":"angular-material-fileupload.js","sources":["ng:/angular-material-fileupload/lib/bytes/bytes.pipe.ts","ng:/angular-material-fileupload/lib/mat-file-upload-queue/mat-file-upload-queue.service.ts","ng:/angular-material-fileupload/lib/mat-file-upload/mat-file-upload.component.ts","ng:/angular-material-fileupload/lib/mat-file-upload-queue/mat-file-upload-queue.component.ts","ng:/angular-material-fileupload/lib/file-upload-input-for/file-upload-input-for.directive.ts","ng:/angular-material-fileupload/lib/mat-file-upload.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'bytes'})\nexport class BytesPipe implements PipeTransform {\n  public transform(bytes: number): string {\n    if (isNaN(parseFloat('' + bytes)) || !isFinite(bytes)) return '-';\n    if (bytes <= 0 ) return '0';\n    var units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'],\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, Math.floor(number))).toFixed(1) +  ' ' + units[number];\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IInput } from \"../mat-file-upload.type\";\n\n@Injectable()\nexport class MatFileUploadQueueService {\n  private inputValueSubject = new BehaviorSubject<IInput>(null);\n  inputValue$ = this.inputValueSubject.asObservable();\n\n  initialize(input: IInput) {\n    this.inputValueSubject.next(input);\n  }\n\n  getInputValue() {\n    return this.inputValueSubject.getValue();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { ReplaySubject, BehaviorSubject, Subscription } from \"rxjs\";\nimport {\n  HttpHeaders,\n  HttpParams,\n  HttpClient,\n  HttpEventType,\n} from \"@angular/common/http\";\nimport { MatFileUploadQueueService } from \"../mat-file-upload-queue/mat-file-upload-queue.service\";\nimport { IUploadProgress } from \"../mat-file-upload.type\";\n\n@Component({\n  selector: \"mat-file-upload\",\n  templateUrl: \"./mat-file-upload.component.html\",\n  styleUrls: [\"./mat-file-upload.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatFileUploadComponent implements OnInit, OnDestroy {\n  private uploadProgressSubject = new ReplaySubject<IUploadProgress>();\n  uploadProgress$ = this.uploadProgressSubject.asObservable();\n\n  private uploadInProgressSubject = new BehaviorSubject<boolean>(false);\n  uploadInProgress$ = this.uploadInProgressSubject.asObservable();\n\n  public subs = new Subscription();\n\n  /* Http request input bindings */\n  @Input()\n  httpUrl: string;\n\n  @Input()\n  httpRequestHeaders:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n\n  @Input()\n  httpRequestParams:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      };\n\n  @Input()\n  fileAlias: string;\n\n  private _file: any;\n  private _id: number;\n\n  @Input()\n  get file(): any {\n    return this._file;\n  }\n  set file(file: any) {\n    this._file = file;\n  }\n\n  @Input()\n  set id(id: number) {\n    this._id = id;\n  }\n  get id(): number {\n    return this._id;\n  }\n\n  @Input()\n  fileUploadAriaLabel = \"File Upload\";\n\n  @Input()\n  cancelAriaLabel = \"Cancel File Upload\";\n\n  /** Output  */\n  @Output() removeEvent = new EventEmitter<MatFileUploadComponent>();\n  @Output() onUpload = new EventEmitter();\n\n  private fileUploadSubscription: any;\n\n  constructor(\n    private HttpClient: HttpClient,\n    private matFileUploadQueueService: MatFileUploadQueueService\n  ) {\n    const queueInput = this.matFileUploadQueueService.getInputValue();\n    if (queueInput) {\n      this.httpUrl = this.httpUrl || queueInput.httpUrl;\n      this.httpRequestHeaders =\n        this.httpRequestHeaders || queueInput.httpRequestHeaders;\n      this.httpRequestParams =\n        this.httpRequestParams || queueInput.httpRequestParams;\n      this.fileAlias = this.fileAlias || queueInput.fileAlias;\n    }\n  }\n\n  ngOnInit() {\n    this.uploadProgressSubject.next({\n      progressPercentage: 0,\n      loaded: 0,\n      total: this._file.size,\n    });\n  }\n\n  public upload(): void {\n    this.uploadInProgressSubject.next(true);\n    // How to set the alias?\n    let formData = new FormData();\n    formData.set(this.fileAlias, this._file, this._file.name);\n    this.subs.add(\n      this.HttpClient.post(this.httpUrl, formData, {\n        headers: this.httpRequestHeaders,\n        observe: \"events\",\n        params: this.httpRequestParams,\n        reportProgress: true,\n        responseType: \"json\",\n      }).subscribe(\n        (event: any) => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.uploadProgressSubject.next({\n              progressPercentage: Math.floor(\n                (event.loaded * 100) / event.total\n              ),\n              loaded: event.loaded,\n              total: event.total,\n            });\n          }\n          this.onUpload.emit({ file: this._file, event: event });\n        },\n        (error: any) => {\n          if (this.fileUploadSubscription) {\n            this.fileUploadSubscription.unsubscribe();\n          }\n          this.uploadInProgressSubject.next(false);\n          this.onUpload.emit({ file: this._file, event: event });\n        },\n        () => this.uploadInProgressSubject.next(false)\n      )\n    );\n  }\n\n  public remove(): void {\n    this.subs.unsubscribe();\n    this.removeEvent.emit(this);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  forwardRef,\n  OnDestroy,\n  OnChanges,\n  QueryList,\n  SimpleChanges,\n  Input,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { Subscription, Observable, merge } from \"rxjs\";\nimport { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { startWith } from \"rxjs/operators\";\nimport { MatFileUploadQueueService } from \"./mat-file-upload-queue.service\";\nimport { MatFileUploadComponent } from \"../mat-file-upload/mat-file-upload.component\";\n\n@Component({\n  selector: \"mat-file-upload-queue\",\n  templateUrl: \"./mat-file-upload-queue.component.html\",\n  styleUrls: [\"./mat-file-upload-queue.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MatFileUploadQueueService],\n})\nexport class MatFileUploadQueueComponent implements OnChanges, OnDestroy {\n  @ContentChildren(forwardRef(() => MatFileUploadComponent))\n  fileUploads: QueryList<MatFileUploadComponent>;\n\n  /** Subscription to remove changes in files. */\n  private _fileRemoveSubscription: Subscription | null;\n\n  /** Subscription to changes in the files. */\n  private _changeSubscription: Subscription;\n\n  /** Combined stream of all of the file upload remove change events. */\n  get fileUploadRemoveEvents(): Observable<MatFileUploadComponent> {\n    return merge(\n      ...this.fileUploads.map((fileUpload) => fileUpload.removeEvent)\n    );\n  }\n\n  public files: Array<any> = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.matFileUploadQueueService.initialize({\n      httpUrl: changes[\"httpUrl\"] ? changes[\"httpUrl\"].currentValue : undefined,\n      httpRequestHeaders: changes[\"httpRequestHeaders\"]\n        ? changes[\"httpRequestHeaders\"].currentValue\n        : undefined,\n      httpRequestParams: changes[\"httpRequestParams\"]\n        ? changes[\"httpRequestParams\"].currentValue\n        : undefined,\n      fileAlias: changes[\"fileAlias\"]\n        ? changes[\"fileAlias\"].currentValue\n        : undefined,\n    });\n  }\n\n  constructor(\n    private matFileUploadQueueService: MatFileUploadQueueService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  /* Http request input bindings */\n  @Input()\n  httpUrl: string;\n\n  @Input()\n  httpRequestHeaders:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      } = new HttpHeaders();\n\n  @Input()\n  httpRequestParams:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      } = new HttpParams();\n\n  @Input()\n  fileAlias: string = \"file\";\n\n  @Input()\n  uploadAllColor = \"primary\";\n\n  @Input()\n  uploadAllLabel = \"Upload All\";\n\n  @Input()\n  removeAllColor = \"primary\";\n\n  @Input()\n  removeAllLabel = \"Remove All\";\n\n  ngAfterViewInit() {\n    // When the list changes, re-subscribe\n    this._changeSubscription = this.fileUploads.changes\n      .pipe(startWith(null))\n      .subscribe(() => {\n        if (this._fileRemoveSubscription) {\n          this._fileRemoveSubscription.unsubscribe();\n        }\n        this._listenTofileRemoved();\n      });\n  }\n\n  private _listenTofileRemoved(): void {\n    this._fileRemoveSubscription = this.fileUploadRemoveEvents.subscribe(\n      (event: MatFileUploadComponent) => {\n        this.files.splice(event.id, 1);\n        this.changeDetectorRef.markForCheck();\n      }\n    );\n  }\n\n  add(file: any) {\n    this.files.push(file);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public uploadAll() {\n    this.fileUploads.forEach((fileUpload) => {\n      fileUpload.upload();\n    });\n  }\n\n  public removeAll() {\n    this.files.splice(0, this.files.length);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy() {\n    if (this._changeSubscription) this._changeSubscription.unsubscribe();\n    if (this._fileRemoveSubscription)\n      this._fileRemoveSubscription.unsubscribe();\n\n    if (this.files) {\n      this.removeAll();\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n} from \"@angular/core\";\n\n/**\n * A material design file upload queue component.\n */\n@Directive({\n  selector: \"input[fileUploadInputFor], div[fileUploadInputFor]\",\n})\nexport class FileUploadInputForDirective {\n  private _queue: any = null;\n  private _element: HTMLElement;\n  @Output() public onFileSelected: EventEmitter<File[]> = new EventEmitter<\n    File[]\n  >();\n\n  constructor(private element: ElementRef) {\n    this._element = this.element.nativeElement;\n  }\n\n  @Input(\"fileUploadInputFor\")\n  set fileUploadQueue(value: any) {\n    if (value) {\n      this._queue = value;\n    }\n  }\n\n  @HostListener(\"change\")\n  public onChange(): any {\n    let files = this.element.nativeElement.files;\n    this.onFileSelected.emit(files);\n\n    for (var i = 0; i < files.length; i++) {\n      this._queue.add(files[i]);\n    }\n    this.element.nativeElement.value = \"\";\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  public onDrop(event: any): any {\n    let files = event.dataTransfer.files;\n    this.onFileSelected.emit(files);\n\n    for (var i = 0; i < files.length; i++) {\n      this._queue.add(files[i]);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.element.nativeElement.value = \"\";\n  }\n\n  @HostListener(\"dragover\", [\"$event\"])\n  public onDropOver(event: any): any {\n    event.preventDefault();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { BytesPipe } from \"./bytes/bytes.pipe\";\nimport {\n  MatProgressBarModule,\n  MatCardModule,\n  MatButtonModule,\n  MatIconModule,\n} from \"@angular/material\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatFileUploadQueueComponent } from \"./mat-file-upload-queue/mat-file-upload-queue.component\";\nimport { MatFileUploadComponent } from \"./mat-file-upload/mat-file-upload.component\";\nimport { FileUploadInputForDirective } from \"./file-upload-input-for/file-upload-input-for.directive\";\n\n@NgModule({\n  declarations: [\n    BytesPipe,\n    MatFileUploadQueueComponent,\n    MatFileUploadComponent,\n    FileUploadInputForDirective,\n  ],\n  imports: [\n    MatProgressBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  exports: [\n    BytesPipe,\n    MatFileUploadQueueComponent,\n    MatFileUploadComponent,\n    FileUploadInputForDirective,\n  ],\n})\nexport class MatFileUploadModule {}\n"]}